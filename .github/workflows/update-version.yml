name: Update Version on Release

on:
  release:
    types: [published]
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to set (e.g., v1.0.0)'
        required: true
        default: 'v0.0.0'

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Use a token that can push to the repo
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Get version and build info
      id: version_info
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          VERSION="${{ github.event.release.tag_name }}"
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        
        # Remove 'v' prefix if present
        VERSION=${VERSION#v}
        
        # Get build date
        BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        
        # Get short commit hash
        COMMIT_HASH=$(git rev-parse --short HEAD)
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "build_date=${BUILD_DATE}" >> $GITHUB_OUTPUT
        echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
        
    - name: Update version.py
      run: |
        cat > poker/version.py << EOF
        """
        Version information for Poker-over-SSH
        This file is automatically updated by GitHub Actions on releases.
        """
        
        # Version information (updated by GitHub Actions)
        VERSION = "${{ steps.version_info.outputs.version }}"
        BUILD_DATE = "${{ steps.version_info.outputs.build_date }}"
        COMMIT_HASH = "${{ steps.version_info.outputs.commit_hash }}"
        
        # Server information
        def get_version_info():
            """Get formatted version information"""
            return {
                'version': VERSION,
                'build_date': BUILD_DATE,
                'commit_hash': COMMIT_HASH
            }
        EOF
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add poker/version.py
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: update version to ${{ steps.version_info.outputs.version }}"
          git push origin HEAD:main
        fi
        
    - name: Create version info summary
      run: |
        echo "## Version Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.version_info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** ${{ steps.version_info.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit Hash:** ${{ steps.version_info.outputs.commit_hash }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The \`poker/version.py\` file has been updated with the new version information." >> $GITHUB_STEP_SUMMARY
